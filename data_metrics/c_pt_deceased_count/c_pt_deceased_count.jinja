{% import 'utils.jinja' as utils %}

CREATE TABLE data_metrics__count_c_pt_deceased_count AS (
WITH

parsed AS (
    SELECT
        id,
        active,
        gender,
        from_iso8601_timestamp(birthDate) AS birthDate,
        deceasedBoolean,
        from_iso8601_timestamp(deceasedDateTime) AS deceasedDateTime
    FROM patient
    WHERE
        (deceasedBoolean IS NOT NULL AND deceasedBoolean)
        OR deceasedDateTime IS NOT NULL
),

simplified AS (
    SELECT
        id,

        {{ utils.coalesce_missing('gender') }} AS administrative_gender,

        {% call utils.coalesce_missing() %}
            {{ utils.patient_active_status() }}
        {% endcall %} AS status,

        -- Calculate age at death.
        -- Note that if deceasedBoolean is used instead of deceasedDateTime,
        -- this will result in None (as we want).
        {% call utils.coalesce_missing() %}
            -- We want a date-difference method that takes month/day into consideration.
            -- That is, we don't want a simple (year_part - year_part) calculation.
            -- Which means DATE_DIFF in Athena, but DATE_SUB in DuckDB...  :shakes_fist:
            -- So we extract days-of-year and compare them to add an offset.
            -- Note that 'doy' is the only alias for day-of-year that is shared between SQLs.
            CAST(
                year(deceasedDateTime)
                - year(birthDate)
                - (
                    CASE WHEN
                        extract(doy FROM birthDate) > extract(doy FROM deceasedDateTime)
                    THEN 1
                    ELSE 0
                    END
                )
                AS VARCHAR
            )
        {% endcall %} AS age

    FROM parsed
)

{% call utils.make_counts('simplified', output_mode) %}
    administrative_gender,
    status,
    age
{% endcall %}
);