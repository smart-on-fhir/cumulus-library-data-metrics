{% import 'utils.jinja' as utils %}

CREATE TABLE data_metrics__q_ref_target_valid_{{ src|lower }}_{{ dest|lower }} AS (

{% if field == 'context.encounter' and not schema['context']['encounter'] %}
    SELECT id FROM {{ src }} WHERE 1=0  -- return an empty table
{% else %}

WITH
src_status AS {{ utils.extract_status(src) }},

{%- if is_array %}
    flattened AS (
        SELECT id, t.row AS unnested_field
        FROM {{ src }},
            UNNEST({{ field }}) AS t (row)
    ),
{%- set src = 'flattened' %}
{%- set field = 'unnested_field' %}
{%- endif %}

grouped_bad_refs AS (
    SELECT
        src.id,
        ARRAY_AGG(src.{{ field }}.reference) AS target
    FROM {{ src }} AS src
    LEFT JOIN {{ dest }} AS dest
    ON SUBSTRING(src.{{ field }}.reference, LENGTH('{{ dest }}/') + 1) = dest.id
    WHERE
        REGEXP_LIKE(src.{{ field }}.reference, '^{{ dest }}/')
        AND dest.id IS NULL
    GROUP BY src.id
)

SELECT
    src.id,
    src_status.status,
    {{ utils.array_to_string('target') }} AS target
FROM grouped_bad_refs AS src
LEFT JOIN src_status
ON src.id = src_status.id

{% endif %} -- closing initial "return empty table" check

);